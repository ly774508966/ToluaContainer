//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ToluaContainer_Container_BindingFactoryWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ToluaContainer.Container.BindingFactory), typeof(System.Object));
		L.RegFunction("Create", Create);
		L.RegFunction("CreateSingle", CreateSingle);
		L.RegFunction("MultipleCreate", MultipleCreate);
		L.RegFunction("To", To);
		L.RegFunction("As", As);
		L.RegFunction("When", When);
		L.RegFunction("Into", Into);
		L.RegFunction("MultipleBind", MultipleBind);
		L.RegFunction("New", _CreateToluaContainer_Container_BindingFactory);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("binder", get_binder, set_binder);
		L.RegVar("bindings", get_bindings, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateToluaContainer_Container_BindingFactory(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				ToluaContainer.Container.IBinder arg0 = (ToluaContainer.Container.IBinder)ToLua.CheckObject(L, 1, typeof(ToluaContainer.Container.IBinder));
				ToluaContainer.Container.BindingFactory obj = new ToluaContainer.Container.BindingFactory(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: ToluaContainer.Container.BindingFactory.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(ToluaContainer.Container.BindingFactory), typeof(System.Type), typeof(ToluaContainer.Container.BindingType)))
			{
				ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)ToLua.ToObject(L, 1);
				System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
				ToluaContainer.Container.BindingType arg1 = (ToluaContainer.Container.BindingType)ToLua.ToObject(L, 3);
				ToluaContainer.Container.IBinding o = obj.Create(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(ToluaContainer.Container.BindingFactory), typeof(System.Type), typeof(ToluaContainer.Container.BindingType), typeof(ToluaContainer.Container.ConstraintType)))
			{
				ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)ToLua.ToObject(L, 1);
				System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
				ToluaContainer.Container.BindingType arg1 = (ToluaContainer.Container.BindingType)ToLua.ToObject(L, 3);
				ToluaContainer.Container.ConstraintType arg2 = (ToluaContainer.Container.ConstraintType)ToLua.ToObject(L, 4);
				ToluaContainer.Container.IBinding o = obj.Create(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ToluaContainer.Container.BindingFactory.Create");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateSingle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)ToLua.CheckObject(L, 1, typeof(ToluaContainer.Container.BindingFactory));
			System.Type arg0 = (System.Type)ToLua.CheckObject(L, 2, typeof(System.Type));
			ToluaContainer.Container.BindingType arg1 = (ToluaContainer.Container.BindingType)ToLua.CheckObject(L, 3, typeof(ToluaContainer.Container.BindingType));
			ToluaContainer.Container.IBinding o = obj.CreateSingle(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MultipleCreate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)ToLua.CheckObject(L, 1, typeof(ToluaContainer.Container.BindingFactory));
			System.Type[] arg0 = ToLua.CheckObjectArray<System.Type>(L, 2);
			ToluaContainer.Container.BindingType[] arg1 = ToLua.CheckObjectArray<ToluaContainer.Container.BindingType>(L, 3);
			ToluaContainer.Container.IBindingFactory o = obj.MultipleCreate(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int To(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)ToLua.CheckObject(L, 1, typeof(ToluaContainer.Container.BindingFactory));
			object[] arg0 = ToLua.CheckObjectArray(L, 2);
			ToluaContainer.Container.IBindingFactory o = obj.To(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int As(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)ToLua.CheckObject(L, 1, typeof(ToluaContainer.Container.BindingFactory));
			object[] arg0 = ToLua.CheckObjectArray(L, 2);
			ToluaContainer.Container.IBindingFactory o = obj.As(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int When(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)ToLua.CheckObject(L, 1, typeof(ToluaContainer.Container.BindingFactory));
			ToluaContainer.Container.Condition[] arg0 = ToLua.CheckObjectArray<ToluaContainer.Container.Condition>(L, 2);
			ToluaContainer.Container.IBindingFactory o = obj.When(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Into(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)ToLua.CheckObject(L, 1, typeof(ToluaContainer.Container.BindingFactory));
			System.Type[] arg0 = ToLua.CheckObjectArray<System.Type>(L, 2);
			ToluaContainer.Container.IBindingFactory o = obj.Into(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MultipleBind(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)ToLua.CheckObject(L, 1, typeof(ToluaContainer.Container.BindingFactory));
			System.Type[] arg0 = ToLua.CheckObjectArray<System.Type>(L, 2);
			ToluaContainer.Container.BindingType[] arg1 = ToLua.CheckObjectArray<ToluaContainer.Container.BindingType>(L, 3);
			ToluaContainer.Container.IBindingFactory o = obj.MultipleBind(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_binder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)o;
			ToluaContainer.Container.IBinder ret = obj.binder;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index binder on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bindings(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)o;
			ToluaContainer.Container.IBinding[] ret = obj.bindings;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bindings on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_binder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ToluaContainer.Container.BindingFactory obj = (ToluaContainer.Container.BindingFactory)o;
			ToluaContainer.Container.IBinder arg0 = (ToluaContainer.Container.IBinder)ToLua.CheckObject(L, 2, typeof(ToluaContainer.Container.IBinder));
			obj.binder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index binder on a nil value" : e.Message);
		}
	}
}

